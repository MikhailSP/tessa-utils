#В этой папке должна находиться схема данных Тесса (tsd-файл и папки, получаемые при экспорте схемы)
$SchemeFolder="$PSScriptRoot\..\Configuration\Scheme\"

#Путь в котором будут созданы сгенерированные файлы (поправить на путь к Tessa.Extensions.Shared реального проекта)
$OutputBaseFolder="$PSScriptRoot\..\Tessa.Extensions.Shared" 

$ClassSuffix="Class"
$Namespace="Generated.Tables"

# Расчитываемые значения
$OutputFolder=Join-Path -Path $OutputBaseFolder -Child ($Namespace -replace '\.','\')

function New-TessaEnumOrClassFile{
    [CmdletBinding()]
    param(
        [string] $OutputFile,
        [string] $Content
    )
    $global:AllFilesCount++
    if (Test-Path -Path $OutputFile){
        $oldContent = Get-Content $OutputFile -Raw -Encoding "UTF8"
        $oldContent = $oldContent.Substring(0,$oldContent.Length-2) #Надо удалить EOF до сравнения
        if ($oldContent -eq $Content){
            $global:ListOfExpectedFiles+=(Resolve-Path -Path $OutputFile).Path
            return
        }
        $global:UpdatedFilesCount++
        Write-Host "File Updated ($global:UpdatedFilesCount): $OutputFile"
    } else {
        $global:CreatedFilesCount++
        Write-Host "File Created ($global:CreatedFilesCount): $OutputFile"
    }
    Set-Content -Path $OutputFile -Value $Content -Encoding "UTF8"
    $global:ListOfExpectedFiles+=(Resolve-Path -Path $OutputFile).Path
}

function New-TessaTableClasses{
    [CmdletBinding()]
    param(
        $TessaScheme,
        [string] $SchemeFolder,
        [switch] $GenerateEnums,
        [switch] $GenerateClasses,
        [switch] $GenerateLinks,
        [switch] $DeleteUnnecessary
    )
    
    foreach ($table in $TessaScheme.Tables.Values){
        $outputPackageFolder=Join-Path -Path $OutputFolder -Child $table.namespace
        $ignoreConsole = New-Item -ItemType Directory -Force -Path $outputPackageFolder

        if ($GenerateEnums)
        {
            $content=New-TessaTableEnumContent -TessaScheme $TessaScheme -Table $table -SubPackage "$Namespace.$($table.namespace)"
            $outputFile=Join-Path -Path $outputPackageFolder -Child "$($table.Name).cs"
            New-TessaEnumOrClassFile -OutputFile $outputFile -Content $content
        }
        if ($GenerateClasses)
        {
            $classContent=New-TessaTableClassContent -TessaScheme $TessaScheme -Table $table -SubPackage "$Namespace.$($table.namespace)" `
                                        -ClassSuffix $ClassSuffix -TableNames $TableNames -Namespace $Namespace `
                                        -GenerateLinks:$GenerateLinks
            $outputClassFile=Join-Path -Path $outputPackageFolder -Child "$($table.Name)$ClassSuffix.cs"
            New-TessaEnumOrClassFile -OutputFile $outputClassFile -Content $classContent
        }
        
    }
}

function New-TessaSchemeClassesFromAllPartitions{
    [CmdletBinding()]
    param(
        [string] $SchemeFolder,
        [switch] $GenerateEnums,
        [switch] $GenerateClasses,
        [switch] $GenerateLinks,
        [switch] $GenerateRecords,
        [switch] $DeleteUnnecessary
    )
    $global:AllFilesCount=0;
    $global:CreatedFilesCount=0;
    $global:UpdatedFilesCount=0;
    $global:DeletedFilesCount=0;
    $global:ListOfExpectedFiles=@()

    $tessaScheme=Get-TessaSchemeObject -SchemeFolder $SchemeFolder -GenerateRecords:$GenerateRecords
    New-TessaTableClasses -TessaScheme $tessaScheme -SchemeFolder $SchemeFolder -GenerateEnums:$GenerateEnums `
                        -GenerateClasses:$GenerateClasses -GenerateLinks:$GenerateLinks

    $csFiles = Get-ChildItem -Path $OutputFolder -Include *.cs -Exclude AutogeneratedClass.cs -Recurse
    foreach($csFile in $csFiles){
        if (!($csFile.FullName -in $global:ListOfExpectedFiles)){
            $global:DeletedFilesCount++
            Write-Host "Unnecessary file ($global:DeletedFilesCount): $($csFile.FullName)"
            if ($DeleteUnnecessary){
                Remove-Item $csFile.FullName
            }
        }
    }

    Write-Host "New files: $CreatedFilesCount"
    Write-Host "Updated files: $UpdatedFilesCount"
    if ($DeleteUnnecessary)
    {
        Write-Host "Deleted files: $DeletedFilesCount"
    } else {
        Write-Host "Unnecessary files: $DeletedFilesCount"
    }
    Write-Host "Total files: $AllFilesCount"
}

" " #Для создания консоли надо что-то в нее написать, иначе упадет дальше
$OutputEncoding = [Text.UTF8Encoding]::UTF8
$OutputEncoding=[Console]::OutputEncoding

Import-Module "$PSScriptRoot\Get-TessaSchemeObject.psm1" -Force -Verbose
Import-Module "$PSScriptRoot\Get-TessaTableEnumContent.psm1" -Force -Verbose
Import-Module "$PSScriptRoot\Get-TessaTableClassContent.psm1" -Force -Verbose

New-TessaSchemeClassesFromAllPartitions -SchemeFolder $SchemeFolder -GenerateEnums -GenerateClasses -GenerateLinks #-DeleteUnnecessary -GenerateRecords
